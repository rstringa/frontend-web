<div class="eye">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="55"
    height="40"
    viewBox="0 0 55 40"
  >
    <defs>
      <style>
        .eye-border {
          fill: var(--primary-color, #fff);
          stroke: #000;
          stroke-linecap: round;
          stroke-linejoin: round;
          stroke-width: 4.86556px;
        }
      </style>
    </defs>
    <g id="eye-group">
      <path
        class="eye-border"
        d="M2.58484,20.31421a2.43276,2.43276,0,0,1,0-1.69321,26.15239,26.15239,0,0,1,48.354,0,2.43276,2.43276,0,0,1,0,1.69321,26.15239,26.15239,0,0,1-48.35395,0"
      ></path>
      <circle cx="26.76181" cy="19.4676" r="7.29834" class="eye-circle"
      ></circle>
    </g>
  </svg>
</div>

<script>
  const iris = document.querySelector(".eye-circle");
  const angleFromCatetes = (a, b) => Math.atan(a / b);
  const calcHypotenuse = (a, b) => Math.sqrt(a * a + b * b);

  const getEyeCoordinates = (eye) => {
    const { x, y, width, height } = eye.getBoundingClientRect();

    return { x: x + width / 2, y: y + height / 2 };
  };

  const calcMaxMovement = (eye) => {
    const eyeWidth = eye.getBoundingClientRect().width;
    if (!eyeWidth) return;
    return eyeWidth / 2;
  };

  const limitOffset = (offset, eye) => {
    const maxMovement = calcMaxMovement(eye);

    if (!maxMovement) return;
    if (calcHypotenuse(offset.x, offset.y) <= maxMovement) {
      return { x: offset.x, y: offset.y };
    }

    const angle = angleFromCatetes(offset.y, offset.x);
    let x = Math.cos(angle) * maxMovement;
    let y = Math.sin(angle) * maxMovement;
    x = offset.x < 0 ? -x : x;
    y = offset.x < 0 ? -y : y;

    return { x, y };
  };

  const getEyeOffset = (eye, mouse) => {
    const x = (mouse.x - eye.x) * 0.25;
    const y = (mouse.y - eye.y) * 0.25;

    return { x, y };
  };

  const moveEye = (eye, mouse) => {
    const center = getEyeCoordinates(eye);
    const offset = getEyeOffset(center, mouse);
    const limitedOffset = limitOffset(offset, eye);

    // const iris = getIris(eye)
    eye.style.transform = `translate(${limitedOffset?.x}px, ${limitedOffset?.y}px)`;
  };

  const onMouseMove = (event) => {
    const mouse = { x: event.clientX, y: event.clientY };

    moveEye(iris, mouse);
    //   moveEye(eyeR, mouse)
  };

  window.addEventListener("mousemove", onMouseMove);
  window.addEventListener("touchmove", onMouseMove);
</script>
