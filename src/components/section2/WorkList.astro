---
import work from "@data/work.json";
import Click from "@components/section2/ClickIcon.astro";
import Click2 from "@components/section2/ClickIcon2.astro";
---

{
  work.map((workItem, index) => (
    <>
      <a
        class={`work-item work-item-${index}`}
        style={`animation-delay:${index * 0.15}s`}
        href={workItem.url}
        target="_blank"
      >
        <span class="work-name">{workItem.url}</span>
        <span class="icon">
          <Click2 />
          <Click />
        </span>
      </a>
      {/* {index > 0 && (index + 1) % 5 === 0 && (
        <div class="more"><span>VIEW ALL</span></div>
      )} */}
    </>
  ))
}

<script>
  // Add .animated class when the element is in the viewport using intersection observer
  const workItems = document.querySelectorAll(".work-item");

  workItems.forEach((workItem) => {
    const workItemRect = workItem.getBoundingClientRect();
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          workItem.classList.add("animated");
        }
      });
    });

    observer.observe(workItem);
  });
</script>

<style>
  .work-item {
    width: 100%;
    height: 80px;
    margin-bottom: 16px;
    padding: 0 30px;
    border-radius: 8px;
    border: 1px solid var(--lines);
    display: flex;
    align-items: center;
    justify-content: space-between;
    text-decoration: none;
    color: #fff;
    backdrop-filter: blur(5px);
    /* transition: all 0.25s ease-in-out; */
    /* transform: scale(1); */
    transform-origin: center center;
    @media (max-width: 767px) {
      background-color: #143c60d5;
    }
    &:hover {
      --band-base:#143D60;
      --band1:color-mix(in srgb, var(--band-base), #ffffff 2%);
      background: repeating-linear-gradient(
        45deg,
        var(--band-base), 
        var(--band-base) 5%,
        var(--band1) 5%,
        var(--band1) 10%
      );
      background-size: 200px 200px;
      animation: move-it 1s linear infinite;
      /* color: var(--bg-color); */
      border-color: #607d8b;
      transform: scale(1.05);

      .icon {
        svg {
          color: #fca728;
          opacity: 1;
          transform: translateY(-34px);
        }
       
      }
      &::after {
        --round:4px;
        content: "";
        position: absolute;
        bottom: -1px;
        left: var(--round);
        height: 2px;
        width:0;
        background-color: color-mix(in srgb, var(--band-base), #ffffff 10%);
        animation: load 1s ease-in forwards;
      }
      & .work-name {
        color:#FF9500;
      }
    }
    .work-name {
      font-size: 21px;
      font-weight: 400;
      display: block;
      width: calc(100% - 40px);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
     
    }
    .icon {
      --size: 34px;
      width: var(--size);
      height: var(--size);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      flex: 0 0 var(--size);
      @media (max-width: 767px) {
        --size: 28px;
      }
      svg {
        width: var(--size);
        height: var(--size);
        color: #fff;
        opacity: 0.5;
        transition: all 0.5s ease-in-out;
      }
    }
  }
  .work-item:nth-child(n + 9) {
    display: none;
  }

  .work-item {
    scale: 0;
    opacity: 0;
    transition:
      transform 0.25s,
      scale 0.5s ease-in-out,
      opacity 0.5s ease-in-out;
    &.animated {
      scale: 1;
      opacity: 1;
    }
  }
  @keyframes move-it {
    0% {
      background-position: initial;
    }
    100% {
      background-position: 200px 0px;
    }
  }
  @keyframes load {
    to {
      width:calc(100% - var(--round)*2);
    }
  }
</style>
