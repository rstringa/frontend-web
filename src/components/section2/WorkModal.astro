---
import Close from '@components/section3/Close.astro'
const language = Astro.props.language
import work from '@data/work.json'
---

<dialog id="modal-work">
	<div class="modal-inner">
		<div class="modal-grid">
			<div class="modal-info">
				<div class="modal-close">
					<Close />
				</div>
				<div class="modal-arrows">
					<a href="#" title={language === 'es' ? 'Trabajo anterior' : 'Previous work'} class="modal-arrow modal-arrow-prev">
						
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-arrow-down-dashed"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 5v.5m0 3v1.5m0 3v6"></path><path d="M18 13l-6 6"></path><path d="M6 13l6 6"></path></svg>
			
					</a>
					<a href="#" title={language === 'es' ? 'Trabajo siguiente' : 'Next work'} class="modal-arrow modal-arrow-next">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-arrow-down-dashed"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 5v.5m0 3v1.5m0 3v6"></path><path d="M18 13l-6 6"></path><path d="M6 13l6 6"></path></svg>
					</a>
				</div>
				<p>
					<span class="modal-work-label">
						{language === 'es' ? 'Nombre del Proyecto' : 'Project Name'}
					</span>
					<span class="modal-work-name"></span>
				</p>
				<p>
					<span class="modal-work-label">
						{language === 'es' ? 'Tecnolog√≠as Utilizadas' : 'Technologies Used'}
					</span>
					<span class="modal-work-technologies"></span>
				</p>
				<p>
					<span class="modal-work-label">
						{language === 'es' ? 'Sitio web' : 'Website'}
					</span>
					<a class="modal-work-url" href="#" target="_blank"></a>
				</p>
			</div>
			<div class="modal-work-image">
				{
					work.map((workItem, idx) => (
						<img
							src={workItem.image}
							alt={workItem.name}
							class="modal-work-image-item"
							width="910"
							height="700"
							loading="lazy"
						/>
					))
				}
			</div>
		</div>
	</div>
</dialog>

<style>
	#modal-work {
		border: 0;
		padding: 0;
		width: 1250px;
		max-width: 95%;
		color: #111;
		background: transparent;
		
		transition: opacity 2s ease;
		opacity: 0;
	}
	#modal-work[open] {
		opacity: 1;
	
		@starting-style {
      		opacity: 0;
			
    	}
	}
	#modal-work::backdrop {
		background: #00000038;
		backdrop-filter: blur(80px);
	}
	#modal-work .modal-inner {
		padding: 0px;
		background: #ededed;
		height: 100%;
		overflow: hidden;
		position: relative;
		border-radius: 12px;
		/* Spinner background */
		background-image:
			radial-gradient(transparent 60%, #ededed 61%),
			/* Spinner */
				url('data:image/svg+xml;utf8,<svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="30" cy="30" r="24" stroke="%23ff9800" stroke-width="6" stroke-linecap="round" stroke-dasharray="110" stroke-dashoffset="60"><animateTransform attributeName="transform" type="rotate" from="0 30 30" to="360 30 30" dur="1s" repeatCount="indefinite"/></circle></svg>');
		background-repeat: no-repeat;
		background-position: center;
		background-size: 60px 60px;
		z-index: 1;
	}
	#modal-work .modal-close {
		position: absolute;
		top: 20px;
		right: 24px;
		z-index: 1000;
		cursor: pointer;
		&:hover {
			svg {
				stroke: #143d60;
			}
		}
	}
	#modal-work .modal-grid {
		position: relative;
		@media (max-width: 767px) {
			display: flex;
			flex-direction: column;
			
		}
	}
	#modal-work .modal-info {
		position: absolute;
		top: 0px;
		bottom: 0;
		right: 0;
		width: 340px;
		height: 100%;
		padding: 52px 32px 25px 32px;
		background: rgb(247 250 252);
		z-index: 5;
		box-shadow: -5px 0 7px #15151f4d;
		@media (max-width: 767px) {
			width: 100%;
			padding-left: 24px;
			padding-right: 24px;
    		padding-bottom: 6px;
			position: relative;
			order:2;
			& p {
				margin-bottom: 24px;
			}
		}
		
		& p span {
			text-wrap: pretty;
		}
	}
	#modal-work .modal-work-label {
		display: block;
		width: 100%;
		font-weight: 600;
		color: #143d60;
		font-size: 15px;
	}
	#modal-work .modal-work-image {
		width: 100%;
		height: 100%;
		background-size: cover;
		background-position: center;
		
    	overflow: hidden;
		@media (max-width: 767px) {
			max-height: 50vh;
			overflow: auto;
		}
	}
	#modal-work .modal-work-image img {
		content-visibility: auto;
		width: auto;
		max-width: 100%;
		display: block;
		object-fit: cover;
		object-position: top left;
		border: 5px solid #EFF;
		border-radius: 12px;
		
		@media (max-width: 767px) {
			
			border: 3px solid #EFF;
			object-fit: contain;
			width: 100%;
			height: auto;
		}
	}
	#modal-work p {
		line-height: 1.5;
		color: #111;
		opacity: 1;
		font-weight: 400;
	}
	#modal-work a {
		color: #111;
	}
	#modal-work a:hover {
		color: #143d60;
	}

	#modal-work .modal-arrows {
		position: absolute;
		top: 20px;
		left: 24px;
		width: fit-content;
		display: flex;
		justify-content: space-between;
		gap: 16px;
		@media (max-width: 767px) {
			left: 17px;
			gap:10px;
		}
		& a {
			width: 24px;
			&:hover {
				svg {
					stroke: #143d60;
				}
			}
		}
		& a.disabled {
			opacity: 0.25;
			pointer-events: none;
		}
		& .modal-arrow-prev {
			transform: rotate(90deg);
		}
		& .modal-arrow-next {
			transform: rotate(-90deg);
		}
	}
</style>
