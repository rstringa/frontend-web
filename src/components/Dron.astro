<dotlottie-player src="https://lottie.host/f694f440-6615-48ba-8ff2-c620dcb781b8/wCz2s9SpPZ.lottie" background="transparent" speed="1" style="width: 300px; height: 300px;" loop autoplay></dotlottie-player>

<style>

    dotlottie-player {
        position: absolute;
        z-index: 10;
        top: 0;
        left: 0;
        filter: drop-shadow(2px 20px 6px black);
        transition: 
        top 2s ease-in-out,
        left 2s ease-in-out,
        transform 0.5s ease-in-out
        ;
        @media (max-width: 768px) {
            width: 200px!important;
            height: 200px!important;
            top: 30vh;
            filter: drop-shadow(2px 4px 6px black);
        }
    }


</style>

<script>
    const dotLottie = document.querySelector("dotlottie-player") as HTMLElement;
    let mousePosition = { x: 0, y: 0 };
    let mouseTimer;
    let scale = 1;
    let dronScale = true;     
    document.addEventListener("mousemove", (event) => {
       
        clearTimeout(mouseTimer);
        mouseTimer = setTimeout(() => {
         mousePosition = getMousePosition(event);
        }, 50);
    });
    dotLottie.addEventListener("click", (event) => {
      
        mousePosition.y += 700;
        if(dronScale){
            scale = scale * 2.5;
            dronScale = false;
        } else {
            scale = scale / 2.5;
            dronScale = true;
        }
        update();
    });

    function getMousePosition(event) {
        const rect = event.target.getBoundingClientRect();
        return {
            x: event.clientX - rect.left / 2,
            y: event.clientY - rect.top / 2,
        };
    }

    function update() {

        if (dotLottie) {
           
            dotLottie.style.setProperty("left", `${mousePosition.x}px`);
            dotLottie.style.setProperty("top", `${mousePosition.y}px`);
            dotLottie.style.setProperty("transform", `scale(${scale})`);

        }
        requestAnimationFrame(update);
    }

    requestAnimationFrame(update);
</script>